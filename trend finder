//+------------------------------------------------------------------+
//|                                                     1m alert.mq4 |
//|                      Copyright © 2009, MetaQuotes Software Corp. |
//|                                        http://www.metaquotes.net |
//+------------------------------------------------------------------+
#property copyright "akram"
#property link      "http://www.metaquotes.net"

//+------------------------------------------------------------------+
//| Input Parameters   مدخلات الاكسبيرت                                 |
//+------------------------------------------------------------------+
extern double  Lots         = 0.1;
extern int     StopLoss     = 500 ;
extern int     TakeProfit   = 20 ;
                                          
int Slippage=5;
int i;


//+------------------------------------------------------------------+
//| Static Parameters   متغيرات عامة                                  |
//+------------------------------------------------------------------+
int            Magic        = 10;


//+------------------------------------------------------------------+
//| expert initialization function                                   |
//+------------------------------------------------------------------+
int init()
  {
//----
   
//----
   return(0);
  }
//+------------------------------------------------------------------+
//| expert deinitialization function                                 |
//+------------------------------------------------------------------+
int deinit()
  {
//----
   
//----
   return(0);
  }
//+------------------------------------------------------------------+
//| expert start function                                            |
//+------------------------------------------------------------------+
int start()
 { 
 

  /*if ( AccountNumber()!=534256)
  Comment( " this is not the account test ( 534256) but this is number is = ", AccountNumber());//return (0) ;     
  if ( AccountNumber()==534256)
   Comment ( "    ooo ok kkk          correct account number is   =  ", AccountNumber());
   */

//+------------------------------------------------------------------+
//|the code to close all position at the end of the day at 12 midnight 
// and this code request the sub function named (close_all_trades());                                          |
//+------------------------------------------------------------------+ 
 //if ( (Minute()==15 ||Minute()==30 ||Minute()==45 || Minute()==00 ) && Seconds () == 0) PlaySound("ok.wav");;
 if (Hour()==0&& Minute()==0 && Seconds () <= 5)close_all_trades();
 /* to call the sub funcation to close all orders at a certain time for examle at 12 PM
 Note:I put also a condition for minute (Minute()<=1) because the EA will continue to close
 any position will opened untill the Hour changed more than ZERO (12 AM ),
 so the minute contion make the EA only close postion in the frist 2 minutes of the hour ZERO */

 // if ( (OrdersTotal () <= 2) )// to determine the total number of opened orders not more than 3 orders 
    if (Seconds () <= 5 || Seconds () == 35 ) 

  { 
    
//+------------------------------------------------------------------+
//| Variables   MAIN and SIGNAL lines in stochastic for all time frams                                           |
//+------------------------------------------------------------------+
  
  double main_1m  , main_5m , main_15m , main_30m , main_1h , main_4h , main_day , main_week , main_month ;
  main_1m = iStochastic(NULL,1,5,3,3,MODE_SMA,0,MODE_MAIN,0);
  main_5m = iStochastic(NULL,5,5,3,3,MODE_SMA,0,MODE_MAIN,0) ;
  main_15m = iStochastic(NULL,15,5,3,3,MODE_SMA,0,MODE_MAIN,0) ;
  main_30m = iStochastic(NULL,30,5,3,3,MODE_SMA,0,MODE_MAIN,0) ;
  main_1h = iStochastic(NULL,60,5,3,3,MODE_SMA,0,MODE_MAIN,0) ;
  main_4h = iStochastic(NULL,240,5,3,3,MODE_SMA,0,MODE_MAIN,0) ;
  main_day = iStochastic(NULL,1440,5,3,3,MODE_SMA,0,MODE_MAIN,0) ;
  main_week = iStochastic(NULL,10080,5,3,3,MODE_SMA,0,MODE_MAIN,0) ;
  main_month = iStochastic(NULL,43200,5,3,3,MODE_SMA,0,MODE_MAIN,0) ;
  
  double signal_1m , signal_5m , signal_15m , signal_30m , signal_1h , signal_4h , signal_day , signal_week , signal_month  ;
  signal_1m = iStochastic(NULL,1,5,3,3,MODE_SMA,0,MODE_SIGNAL,0) ;
  signal_5m = iStochastic(NULL,5,5,3,3,MODE_SMA,0,MODE_SIGNAL,0) ;
  signal_15m = iStochastic(NULL,15,5,3,3,MODE_SMA,0,MODE_SIGNAL,0) ;
  signal_30m = iStochastic(NULL,30,5,3,3,MODE_SMA,0,MODE_SIGNAL,0) ;
  signal_1h = iStochastic(NULL,60,5,3,3,MODE_SMA,0,MODE_SIGNAL,0) ;
  signal_4h = iStochastic(NULL,240,5,3,3,MODE_SMA,0,MODE_SIGNAL,0) ;
  signal_day = iStochastic(NULL,1440,5,3,3,MODE_SMA,0,MODE_SIGNAL,0) ;
  signal_week = iStochastic(NULL,10080,5,3,3,MODE_SMA,0,MODE_SIGNAL,0) ;
  signal_month = iStochastic(NULL,43200,5,3,3,MODE_SMA,0,MODE_SIGNAL,0) ;
  
//+------------------------------------------------------------------+  
// Differance  conditions  
//+------------------------------------------------------------------+
double diff_1m_down , diff_5m_down , diff_15m_down , diff_30m_down , diff_1h_down , diff_4h_down , diff_day_down , diff_week_down , diff_month_down ;   
  diff_1m_down = signal_1m-main_1m ;
  diff_5m_down = signal_5m-main_5m ;
  diff_15m_down = signal_15m-main_15m ;
  diff_30m_down = signal_30m-main_30m ;
  diff_1h_down = signal_1h-main_1h ;
  diff_4h_down = signal_4h-main_4h ;
  diff_day_down = signal_day-main_day ;
  diff_week_down = signal_week-main_week ;
  diff_month_down = signal_month-main_month ;
  
double diff_1m_up , diff_5m_up , diff_15m_up , diff_30m_up , diff_1h_up , diff_4h_up , diff_day_up , diff_week_up , diff_month_up ;  
  diff_1m_up = main_1m-signal_1m ;
  diff_5m_up = main_5m-signal_5m ;
  diff_15m_up = main_15m-signal_15m ;
  diff_30m_up = main_30m-signal_30m ;
  diff_1h_up = main_1h-signal_1h ;
  diff_4h_up = main_4h-signal_4h ;
  diff_day_up = main_day-signal_day ;
  diff_week_up = main_week-signal_week ;
  diff_month_up = main_month-signal_month ;
  
//open and close price for current candle in the month,week,and day frames
double openMonthPrice = iOpen(Symbol(),PERIOD_MN1 ,0) ;// the open price of the candle 0 (the current candle)on the month frame
double openWeekPrice = iOpen(Symbol(),PERIOD_W1 ,0) ;// the open price of the candle 0 (the current candle)on the week frame
double openDayPrice = iOpen(Symbol(),PERIOD_D1 ,0) ;// the open price of the candle 0 (the current candle)on the day frame
double closeMonthPrice = iClose(Symbol(),PERIOD_MN1 ,0);// the close price of the candle 0 (the current candle)on the month frame
double closeWeekPrice = iClose(Symbol(),PERIOD_W1 ,0);// the close price of the candle 0 (the current candle)on the week frame
double closeDayPrice = iClose(Symbol(),PERIOD_D1 ,0);// the close price of the candle 0 (the current candle)on the day frame

// calculate the avarage  body of  the candle in month frame
double body0Month = MathAbs(iOpen(Symbol(),PERIOD_MN1 ,0) - iClose(Symbol(),PERIOD_MN1 ,0));
double body1Month = MathAbs(iOpen(Symbol(),PERIOD_MN1 ,1) - iClose(Symbol(),PERIOD_MN1 ,1));
double body2Month = MathAbs(iOpen(Symbol(),PERIOD_MN1 ,2) - iClose(Symbol(),PERIOD_MN1 ,2));
double body3Month = MathAbs(iOpen(Symbol(),PERIOD_MN1 ,3) - iClose(Symbol(),PERIOD_MN1 ,3));
double body4Month = MathAbs(iOpen(Symbol(),PERIOD_MN1 ,4) - iClose(Symbol(),PERIOD_MN1 ,4));
double body5Month = MathAbs(iOpen(Symbol(),PERIOD_MN1 ,5) - iClose(Symbol(),PERIOD_MN1 ,5));
double avarageBodyMonth= ( (body0Month+body1Month+body2Month+body3Month+body4Month+body5Month)/6);


// calculate the avarage  body of  the candle in week frame
double body0Week = MathAbs(iOpen(Symbol(),PERIOD_W1 ,0) - iClose(Symbol(),PERIOD_W1 ,0));
double body1Week = MathAbs(iOpen(Symbol(),PERIOD_W1 ,1) - iClose(Symbol(),PERIOD_W1 ,1));
double body2Week = MathAbs(iOpen(Symbol(),PERIOD_W1 ,2) - iClose(Symbol(),PERIOD_W1 ,2));
double body3Week = MathAbs(iOpen(Symbol(),PERIOD_W1 ,3) - iClose(Symbol(),PERIOD_W1 ,3));
double body4Week = MathAbs(iOpen(Symbol(),PERIOD_W1 ,4) - iClose(Symbol(),PERIOD_W1 ,4));
double body5Week = MathAbs(iOpen(Symbol(),PERIOD_W1 ,5) - iClose(Symbol(),PERIOD_W1 ,5));
double avarageBodyWeek= ( (body0Week+body1Week+body2Week+body3Week+body4Week+body5Week)/6);

// calculate the avarage  body of  the candle in Day frame
double body0Day = MathAbs(iOpen(Symbol(),PERIOD_D1,0) - iClose(Symbol(),PERIOD_D1,0));
double body1Day = MathAbs(iOpen(Symbol(),PERIOD_D1,1) - iClose(Symbol(),PERIOD_D1,1));
double body2Day = MathAbs(iOpen(Symbol(),PERIOD_D1,2) - iClose(Symbol(),PERIOD_D1,2));
double body3Day = MathAbs(iOpen(Symbol(),PERIOD_D1,3) - iClose(Symbol(),PERIOD_D1,3));
double body4Day = MathAbs(iOpen(Symbol(),PERIOD_D1,4) - iClose(Symbol(),PERIOD_D1,4));
double body5Day = MathAbs(iOpen(Symbol(),PERIOD_D1,5) - iClose(Symbol(),PERIOD_D1,5));
double avarageBodyDay= ( (body0Day+body1Day+body2Day+body3Day+body4Day+body5Day)/6);

// trend Down short sell conditions
bool trendDown1 = ( openMonthPrice > closeMonthPrice &&  body0Month > avarageBodyMonth &&   // month frame candle is down and have strong body
                     // month frame difference (ignored )
                     // month frame sochactsic ( ignored
                      openWeekPrice > closeWeekPrice &&  body0Week > avarageBodyWeek &&   // week frame candle is down and have strong body
                      diff_week_down > 10 &&                                              // week frame difference
                      main_week < signal_week &&                                           // week frame sochactsic
                openWeekPrice > closeWeekPrice &&                              // day frame candle is down and have strong body (ignore the candle size)
                diff_day_down > 10  &&                                        // day frame difference
                main_day < signal_day  );                                       // day frame sochactsic
/*
bool trendDown2 = ( )) ;
bool trendDown3 = (  )  ;
bool trendDown4 = (  )  ;
bool trendDown5 = (  ); 
bool trendDown6 = (  );
*/

// trend Up short sell conditions
/*
bool trendUp1 = (  );
bool trendUp2 = (  ) ;
bool trendUp3 = (   )  ;
bool trendUp4 = (  );
bool trendUp5 = (  ); 
bool trendUp6 = (  ); 
*/

//+------------------------------------------------------------------+
// Alerts only for Conditions test Ex. trendDown1, trendDown2, trendUp1, trendUp2, etc,
//+------------------------------------------------------------------+

//short alerts    
   if (trendDown1)
   {Alert ("trendDown1    ", Symbol(), "  ");
   PlaySound("alert2.wav");}
  /* if (trendDown2)
   {Alert ("trendDown2    ", Symbol(), "  ");
   PlaySound("alert2.wav");}
   if (trendDown3)
   {Alert ("trendDown3    ", Symbol(), "   " );
   PlaySound("alert2.wav");}
   if (trendDown4)
   {Alert ("trendDown4    ", Symbol(), "  " );
   PlaySound("alert2.wav");}
   if (trendDown5)
   {Alert ("trendDown5    ", Symbol(), "    ");
   PlaySound("alert2.wav");}
   if (trendDown6)
   {Alert ("trendDown6    ", Symbol(), "    ");
   PlaySound("alert2.wav");}
   
   
//long alerts   
   if (trendUp1)
   Alert ("trendUp1     ", Symbol(), "    ");
   if (trendUp2)
   Alert ("trendUp2     ", Symbol(), "   " );
   if (trendUp3)
   Alert ("trendUp3     ", Symbol(), "    ");
   if (trendUp3)
   Alert ("trendUp4     ", Symbol(), "    ");
   if (trendUp5)
   Alert ("trendUp5     ", Symbol(), "    ");
   if (trendUp6)
   Alert ("trendUp6     ", Symbol(), "     " );
   */
   
   
  /* 
//+------------------------------------------------------------------+
// Actual orders for sell and buy for the Ok conditions 
//+------------------------------------------------------------------+
if ( short1 || short2 || short3 || short4 || short5 || short6 || short7 || short8  || short9  || short10  || short11  || short12  || short13  || short14  || short15  || short16  || short17 )
   {
         OrderSend(Symbol(),OP_SELL,Lots,Bid, 0, Bid+StopLoss*Point, Bid-TakeProfit*Point,"LetsFX Lesson1", Magic, 0,LightPink);     
   }
   
  if ( long1 || long2 || long3 || long4 || long5 || long6 || long7 || long8 || long9 || long10 || long11 || long12 || long13 || long14 || long15 || long16 || long17 )
   {
       OrderSend(Symbol(),OP_BUY,Lots,Ask, 5, Ask-StopLoss*Point, Ask+TakeProfit*Point,"LetsFX Lesson1", Magic, 0, RoyalBlue);
   }

  
   Comment("I LOVE YOU : ");
   */ 
   
//----
   
//----
   return(0);
  }
  }
  
//+------------------------------------------------------------------+

//+------------------------------------------------------------------+
// a SUB program or sub funcation to Close all orders at a certain time   
//+------------------------------------------------------------------+

void close_all_trades()
{
    for(i=OrdersTotal()-1;i>=0;i--)
       {
       OrderSelect(i, SELECT_BY_POS);
       int type   = OrderType();
               
       bool result = false;
              
       switch(type)
          {
          //Close opened long positions
          case OP_BUY  : result = OrderClose(OrderTicket(),OrderLots(),MarketInfo(OrderSymbol(),MODE_BID),Slippage,Pink);
                         break;
               
          //Close opened short positions
          case OP_SELL : result = OrderClose(OrderTicket(),OrderLots(),MarketInfo(OrderSymbol(),MODE_ASK),Slippage,Pink);
                         break;
          //Close pending orders
            case OP_BUYLIMIT  :
            case OP_BUYSTOP   :
            case OP_SELLLIMIT :
            case OP_SELLSTOP  : result = OrderDelete( OrderTicket() );                
          }
          
       if(result == false)
          {
            Sleep(3000);
          }  
       }
      Print ("Account Profit Reached. All Open & Pending Trades Have Been Closed");
      
      
      return(0);
   }  
   

//+------------------------------------------------------------------+
